{"version":3,"sources":["stonk.jpg","calculator.jpg","SENTIMENT.jpg","Startup.js","Sentiment.js","Home.js","Charts.js","CreateUser.js","Calculator.js","App.js","reportWebVitals.js","index.js"],"names":["MyComponent","Sentiment","useState","stockInfo","updatestock","dateInfo","updateDates","mostRecentStock","updateRecent","errorMessage","assertError","to","className","StockSearch","SentimentView","InsertError","formStock","updateForm","onChange","evt","target","value","type","onClick","id","a","dateArr","scoreArr","fetch","toUpperCase","then","response","console","log","status","json","result","length","forEach","resultObj","push","date","score","catch","err","error","name","postive_score","negative_score","activity","state","labels","datasets","label","backgroundColor","borderColor","borderWidth","data","defaults","color","options","responsive","maintainAspectRatio","layout","padding","top","left","right","bottom","title","display","text","fontSize","legend","position","width","height","positive_score","avg_7_days","avg_30_days","setTimeout","Home","updateLogin","formUpdate","updatePage","useEffect","LoginComponent","src","stonkPic","alt","calcPic","sentimentPic","SotD","sessionStorage","getItem","GetStocks","InsertButton","setError","stocks","setItems","res","stockArr","fetchData","message","class","map","stock","ticker","shares","price","formShares","updateForm2","formPrice","updateForm3","removeStock","updateForm4","isAStock","obj","username","method","headers","body","JSON","stringify","updateUsername","password","updatePassword","passObj","loginSuccess","setItem","removeItem","Charts","returnObj","updateObj","ChartSearch","ChartView","StockData","priceArr","chart","indicators","quote","open","element","timestamp","Date","getMonth","getDate","dividend","undefined","summaryDetail","dividendRate","raw","quoteType","shortName","defaultKeyStatistics","fmt","averageDailyVolume3Month","Math","round","regularMarketOpen","earningsQuarterlyGrowth","forwardPE","CreateUser","successMessage","assertSuccess","createSuccess","InsertSuccess","Calculator","updateShares","updatePrice","div","updateDiv","updateOptions","newPrice","updateNewPrice","shareInt","parseInt","priceFloat","parseFloat","divFloat","optionsFloat","newPriceFloat","newCostBasis","annualReturn","isNaN","e","test","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.45a134ab.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/stonk.02491643.jpg\";","export default __webpack_public_path__ + \"static/media/calculator.ef83aa76.jpg\";","export default __webpack_public_path__ + \"static/media/SENTIMENT.f89e1909.jpg\";","import { useEffect, useState } from 'react';\r\n\r\n\r\nfunction MyComponent() {\r\n    const [error, setError] = useState(null);\r\n    const [item, setItem] = useState('');\r\n    const [itemArr, setArr] = useState([]);\r\n\r\n    // Note: the empty deps array [] means\r\n    // this useEffect will run once\r\n    // similar to componentDidMount()\r\n\r\n    if (item === '') {\r\n        fetch(`http://99.109.3.109:3000/Stocks/${sessionStorage.getItem('username')}`, {\r\n            \"method\": \"GET\",\r\n        })\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n\r\n\r\n                    try {\r\n\r\n                        setItem(result.stockArr[Math.floor(Math.random() * result.stockArr.length)].ticker);\r\n                        \r\n                    } catch {\r\n                        console.log(\"No tickers\")\r\n                    }\r\n\r\n\r\n                    return;\r\n                },\r\n                // Note: it's important to handle errors here\r\n                // instead of a catch() block so that we don't swallow\r\n                // exceptions from actual bugs in components.\r\n                (error) => {\r\n                    setError(error);\r\n                }\r\n            )\r\n    }\r\n\r\n    if (item === '') {\r\n        return null;\r\n    }\r\n\r\n   \r\n\r\n    if (itemArr.length === 0 && sessionStorage.getItem('reqSent') !== 'true') {\r\n\r\n        sessionStorage.setItem('reqSent', 'true');\r\n\r\n        fetch(`https://yahoo-finance-low-latency.p.rapidapi.com/v11/finance/quoteSummary/${item}?modules=defaultKeyStatistics%2CassetProfile`, {\r\n            \"method\": \"GET\",\r\n            \"headers\": {\r\n                \"x-rapidapi-key\": \"735c17eaf5msh6b7afe7f835a766p1bfb18jsn91f7d4ad1f8e\",\r\n                \"x-rapidapi-host\": \"yahoo-finance-low-latency.p.rapidapi.com\"\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n\r\n                    if(result.quoteSummary === undefined || result.quoteSummary.result === null){\r\n                        sessionStorage.setItem('reqSent', 'false');\r\n                        return;\r\n                    }\r\n\r\n                    let info = [];\r\n               \r\n\r\n                    info.push(item);\r\n                    info.push(result.quoteSummary.result[0].assetProfile.city);\r\n                    info.push(result.quoteSummary.result[0].assetProfile.industry);\r\n                    info.push(result.quoteSummary.result[0].assetProfile.fullTimeEmployees);\r\n                    info.push(result.quoteSummary.result[0].assetProfile.website);\r\n                    info.push(result.quoteSummary.result[0].defaultKeyStatistics.forwardPE.fmt);\r\n                    info.push(result.quoteSummary.result[0].defaultKeyStatistics.profitMargins.fmt);\r\n\r\n                    setArr(info);\r\n\r\n\r\n                    sessionStorage.setItem('reqSent', false);\r\n\r\n\r\n                },\r\n                // Note: it's important to handle errors here\r\n                // instead of a catch() block so that we don't swallow\r\n                // exceptions from actual bugs in components.\r\n                (error) => {\r\n                    setError(error);\r\n                }\r\n            )\r\n    }\r\n\r\n    if (error) {\r\n        return <div>Error: {error.message}</div>;\r\n    } else if (itemArr.length > 0) {\r\n        return (\r\n\r\n            <div className = \"SotDEle\">\r\n                <p>Company symbol: &nbsp;&nbsp;{itemArr[0]}</p> \r\n                <p>Based in: &nbsp;&nbsp;{itemArr[1]}</p>\r\n                <p>Industry: &nbsp;&nbsp;{itemArr[2]}</p>\r\n                <p>Employee Count: &nbsp;&nbsp;{itemArr[3]}</p>\r\n                <br></br>\r\n                <p>Website: &nbsp;&nbsp;{itemArr[4]}</p> \r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <p>Loading...</p>\r\n\r\n            <p>If stock doesn't load, ticker may have changed. Refresh for a new one.</p>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default MyComponent;\r\n\r\n","\r\nimport React, { useReducer } from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport { Bar, Line, defaults } from 'react-chartjs-2';\r\nimport Chart from 'chart.js';\r\n\r\n\r\n\r\n\r\n\r\nfunction Sentiment() {\r\n\r\n    const [stockInfo, updatestock] = useState([]);\r\n    const [dateInfo, updateDates] = useState([]);\r\n    const [mostRecentStock, updateRecent] = useState({});\r\n    const [errorMessage, assertError] = useState('');\r\n\r\n    return (\r\n        <div>\r\n            <Link to=\"/\"> Return to Home</Link>\r\n            <div className='APISearch'>\r\n\r\n\r\n\r\n\r\n                <div>\r\n                    <br />\r\n                    <br />\r\n                    <StockSearch />\r\n                </div>\r\n                <SentimentView />\r\n                <InsertError />\r\n            </div>\r\n        </div>\r\n\r\n\r\n    )\r\n\r\n\r\n    function StockSearch() {\r\n        const [formStock, updateForm] = useState('');\r\n\r\n        return (\r\n            <div>\r\n                <span> Search for ticker: </span><span><input className='formInput' onChange={evt => updateForm(evt.target.value)} type='text'></input></span> <button onClick={buttonClick} id=\"addButton\">Confirm</button>\r\n\r\n            </div>\r\n\r\n        )\r\n\r\n        async function buttonClick() {\r\n\r\n\r\n            let dateArr = [];\r\n\r\n            let scoreArr = [];\r\n\r\n\r\n            await fetch(`https://socialsentiment-io.p.rapidapi.com/stocks/${formStock.toUpperCase()}/sentiment/daily/`, {\r\n                \"method\": \"GET\",\r\n                \"headers\": {\r\n                    \"x-rapidapi-key\": \"c855900aafmshb5d7c3e12bbc769p180117jsn87216bd9ab88\",\r\n                    \"x-rapidapi-host\": \"socialsentiment-io.p.rapidapi.com\"\r\n                }\r\n            })\r\n                .then((response) => {\r\n\r\n                    console.log(response);\r\n                    if (response.status === 400 || response.status === 404 || response.status === 500){\r\n                        console.log('err');\r\n                        assertError('Stock does not exist.');\r\n                        return;\r\n                    }\r\n                    return response.json()\r\n                }\r\n                ).then((result) => {\r\n\r\n                 \r\n                    if(result.length === 0){\r\n                        assertError('Stock does not exist.');\r\n                        return;\r\n                    }\r\n\r\n                    result.forEach((resultObj) => {\r\n                        dateArr.push(resultObj.date)\r\n                        scoreArr.push(resultObj.score)\r\n                    })\r\n\r\n\r\n                    updatestock(scoreArr);\r\n                    updateDates(dateArr);\r\n                    updateRecent(result[7]);\r\n                    \r\n\r\n                })\r\n                .catch(err => {\r\n                    console.error(err);\r\n                });\r\n\r\n\r\n            let obj = {\r\n                name: formStock,\r\n                score: 5,\r\n                postive_score: 5,\r\n                negative_score: -2,\r\n                activity: 300,\r\n\r\n            }\r\n\r\n\r\n            return;\r\n        }\r\n\r\n\r\n    }\r\n\r\n    function SentimentView() {\r\n\r\n        if (stockInfo.length === 0) {\r\n            return null;\r\n        }\r\n\r\n        const state = {\r\n            labels: dateInfo,\r\n            datasets: [\r\n                {\r\n                    label: 'Sentiment Score',\r\n                    backgroundColor: 'rgba(53,122,14,1)',\r\n                    borderColor: 'rgba(0,0,0,1)',\r\n                    borderWidth: 2,\r\n                    data: stockInfo\r\n                }\r\n            ]\r\n        }\r\n\r\n        defaults.borderColor = 'green';\r\n        defaults.color = 'rgb(81, 243, 81)';\r\n\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <Bar\r\n                        data={state}\r\n                        options={{\r\n                            responsive: true,\r\n                            maintainAspectRatio: false,\r\n                            layout: {\r\n                                padding: {\r\n                                    top: 5,\r\n                                    left: 15,\r\n                                    right: 25,\r\n                                    bottom: 15\r\n                                }\r\n                            },\r\n                            title: {\r\n                                display: true,\r\n                                text: 'Average Rainfall per month',\r\n                                fontSize: 20\r\n                            },\r\n                            legend: {\r\n                                display: true,\r\n                                position: 'right'\r\n                            }\r\n                        }}\r\n                        width={10}\r\n                        height={300}\r\n\r\n                    />\r\n                </div>\r\n\r\n                <div id=\"sentimentDiv\">\r\n                    <table id=\"sentimentTable\">\r\n\r\n                        <tr>\r\n                            <th className = 'sent'><p className = 'sent'>Most recent date</p></th>\r\n                            <th className = 'sent'><p className = 'sent'>Activity</p></th>\r\n                            <th className = 'sent'><p className = 'sent'>Positive score</p></th>\r\n                            <th className = 'sent'><p className = 'sent'>Negative score</p></th>\r\n                            <th className = 'sent'><p className = 'sent'>7 Day Average</p></th>\r\n                            <th className = 'sent'><p className = 'sent'>30 Day Average</p></th>\r\n                        </tr>\r\n                        <tr>\r\n                            <td className = 'sent'><p className = 'sent'>{mostRecentStock.date}</p></td>\r\n                            <td className = 'sent'><p className = 'sent'>{mostRecentStock.activity}</p></td>\r\n                            <td className = 'sent'><p className = 'sent'>{mostRecentStock.positive_score}</p></td>\r\n                            <td className = 'sent'><p className = 'sent'>{mostRecentStock.negative_score}</p></td>\r\n                            <td className = 'sent'><p className = 'sent'>{mostRecentStock.avg_7_days}</p></td>\r\n                            <td className = 'sent'><p className = 'sent'>{mostRecentStock.avg_30_days}</p></td>\r\n\r\n\r\n                        </tr>\r\n\r\n\r\n\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    function InsertError() {\r\n\r\n        if (errorMessage === '') {\r\n            return null;\r\n        }\r\n\r\n        setTimeout(() => {\r\n            assertError('');\r\n        }, 1000);\r\n\r\n        return (<p id=\"errorChart\">{errorMessage}</p>);\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Sentiment\r\n","import Startup from './Startup';\r\nimport stonkPic from './stonk.jpg';\r\nimport calcPic from './calculator.jpg';\r\nimport sentimentPic from './SENTIMENT.jpg';\r\nimport React, { useReducer } from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport MyComponent from './Startup';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n} from \"react-router-dom\";\r\n\r\n\r\nfunction Home() {\r\n\r\n    let stockString = \"\";\r\n\r\n    const [loggedIn, updateLogin] = useState(false);\r\n\r\n    const [formUpdate, updatePage] = useState('');\r\n\r\n    useEffect(() => {\r\n        updatePage();\r\n    }, [formUpdate])\r\n\r\n\r\n    return (<div className=\"App\">\r\n\r\n        <section className=\"hero\">\r\n            <div className=\"hero-body\">\r\n                <div className=\"container\">\r\n                    <h1 className=\"title textCenter pageHeader\">\r\n                        StockFriend\r\n                </h1>\r\n                    <h2 className=\"subtitle textCenter pageHeader\">\r\n                        Tools for the diligent investor\r\n                </h2>\r\n                </div>\r\n            </div>\r\n        </section>\r\n\r\n        <LoginComponent />\r\n\r\n        <section className=\"section\">\r\n            <div className=\"container\">\r\n\r\n                <div className=\"columns is-gapless\">\r\n\r\n                    <div className=\"column\">\r\n                        <img id=\"mainPic\" className=\"roundedCorners\" src={stonkPic} alt=\"stonkChart\" />\r\n                        <h1 className=\"imgHeader has-text-centered\"> <Link to=\"/charts\">Stock Charts</Link> </h1>\r\n                    </div>\r\n                    <div className=\"column\">\r\n                        <img src={calcPic} className=\"roundedCorners\" alt=\"calculator\" id=\"mainPic\" />\r\n                        <h1 className=\"imgHeader has-text-centered\"><Link to=\"/calculator\">Calculator tool</Link> </h1>\r\n                    </div>\r\n                    <div className=\"column\">\r\n                        <img src={sentimentPic} className=\"roundedCorners\" alt=\"Sentiment\" id=\"mainPic\" />\r\n                        <h1 className=\"imgHeader has-text-centered\"><Link to=\"/Sentiment\"> Stock Sentiment </Link> </h1>\r\n                    </div>\r\n\r\n\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </section>\r\n\r\n        <SotD />\r\n\r\n\r\n    </div>);\r\n\r\n\r\n    function SotD() {\r\n        if (sessionStorage.getItem('loggedIn') === 'true') {\r\n\r\n\r\n            return (<section className=\"section\">\r\n                <div className=\"container\">\r\n\r\n                    <div className=\"columns\">\r\n                        <div className=\"column\">\r\n                            <h1>My Stocks: </h1>\r\n                            <div id=\"SotD\">\r\n\r\n                                <GetStocks />\r\n\r\n                            </div>\r\n                            <InsertButton />\r\n                        </div>\r\n                        <div className=\"column\">\r\n                            <h1>Stock Highlight: </h1>\r\n                            <div id=\"SotD\">\r\n\r\n                                {/* <Startup /> */}\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </section>);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function GetStocks() {\r\n\r\n        const [error, setError] = useState(null);\r\n        const [stocks, setItems] = useState([]);\r\n\r\n        \r\n        useEffect(() => {\r\n\r\n            async function fetchData() {\r\n                await fetch(`http://99.109.3.109:3000/Stocks/${sessionStorage.getItem('username')}`, {\r\n                    \"method\": \"GET\",\r\n                })\r\n                    .then(res => res.json())\r\n                    .then(\r\n                        (result) => {\r\n\r\n\r\n                            if (result === null) {\r\n                                return;\r\n                            }\r\n\r\n                            console.log(result);\r\n                            setItems(result.stockArr)\r\n\r\n\r\n\r\n                        },\r\n                        \r\n                        (error) => {\r\n                            setError(error);\r\n                        }\r\n                    )\r\n            }\r\n\r\n            fetchData();\r\n\r\n        }, []);\r\n\r\n        if (error) {\r\n            return <div>Error: {error.message}</div>;\r\n        } else {\r\n            return <div className=\"has-text-left SotDEle\">\r\n\r\n                <table class = 'chartTable'>\r\n                    <tr>\r\n                        <th><p>Ticker</p></th>\r\n                        <th><p>Shares</p></th>\r\n                        <th><p>Average Price</p></th>\r\n                    </tr>\r\n\r\n                    {stocks.map(stock => (\r\n\r\n                        <tr>\r\n                            <td><p className='capitalized'>{stock.ticker}</p></td>\r\n                            <td><p>{stock.shares}</p></td>\r\n                            <td><p>${stock.price}</p></td>\r\n                        </tr>\r\n\r\n                    ))}\r\n\r\n                </table>\r\n            </div>\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    function InsertButton() {\r\n        const [formStock, updateForm] = useState('');\r\n        const [formShares, updateForm2] = useState('');\r\n        const [formPrice, updateForm3] = useState('');\r\n        const [removeStock, updateForm4] = useState('');\r\n        const [errorMessage, assertError] = useState('');\r\n\r\n        if (sessionStorage.getItem('loggedIn') === \"true\") {\r\n\r\n\r\n            return (\r\n                <div>\r\n                    <div>\r\n                        <span> Add Ticker: </span><span><input className='formInput' onChange={evt => updateForm(evt.target.value)} type='text'></input></span>\r\n                        <span> Shares: </span><span><input className='formInput' onChange={evt => updateForm2(evt.target.value)} type='text'></input></span>\r\n                        <span> Avg Price: </span><span><input className='formInput' onChange={evt => updateForm3(evt.target.value)} type='text'></input></span> <button onClick={buttonClick} id=\"addButton\">Confirm</button>\r\n                        <InsertError />\r\n                    </div>\r\n                    <br />\r\n                    <div id='removeStock'>\r\n                        <span> Remove Ticker: </span><span><input className='formInput' onChange={evt => updateForm4(evt.target.value)} type='text'></input></span>  <button onClick={removeClick} id=\"removeButton\">Confirm</button>\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else {\r\n            return null;\r\n        }\r\n        function buttonClick() {\r\n\r\n            let isAStock = true;\r\n\r\n\r\n\r\n            async function fetchData() {\r\n\r\n                await fetch(`https://yahoo-finance-low-latency.p.rapidapi.com/v11/finance/quoteSummary/${formStock}?modules=defaultKeyStatistics%2CassetProfile`, {\r\n                    \"method\": \"GET\",\r\n                    \"headers\": {\r\n                        \"x-rapidapi-key\": \"c855900aafmshb5d7c3e12bbc769p180117jsn87216bd9ab88\",\r\n                        \"x-rapidapi-host\": \"yahoo-finance-low-latency.p.rapidapi.com\"\r\n                    }\r\n                })\r\n                    .then(response => {\r\n                        if (response.status === 404) {\r\n                            isAStock = false;\r\n                            assertError('Stock does not exist.');\r\n                        }\r\n                    })\r\n                    .catch(err => {\r\n                        console.error(err);\r\n                    });\r\n\r\n\r\n\r\n                if (!isAStock) {\r\n                    return;\r\n                }\r\n                console.log(sessionStorage.getItem('username'))\r\n                let obj = {\r\n                    username: sessionStorage.getItem('username'),\r\n                    ticker: formStock.toUpperCase(),\r\n                    shares: formShares,\r\n                    price: formPrice\r\n\r\n                }\r\n\r\n                await fetch(\"http://99.109.3.109:3000/Stocks\", {\r\n                    method: \"POST\",\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify(obj)\r\n\r\n                })\r\n                    .then(res => res.json())\r\n                    .then(\r\n                        (result) => {\r\n\r\n                            console.log(result);\r\n                            updatePage(result);\r\n\r\n\r\n                        },\r\n                       \r\n\r\n                    )\r\n            }\r\n\r\n            fetchData();\r\n\r\n            return;\r\n        }\r\n\r\n        function removeClick(){\r\n\r\n            let obj = {\r\n                ticker: removeStock.toUpperCase()\r\n            }\r\n\r\n            fetch(`http://99.109.3.109:3000/Stocks/${sessionStorage.getItem('username')}`, {\r\n                    method: \"DELETE\",\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify(obj)\r\n\r\n                })\r\n                    .then(res => res.json())\r\n                    .then(\r\n                        (result) => {\r\n\r\n                            console.log(result);\r\n                            updatePage(result);\r\n\r\n\r\n                        },\r\n                       \r\n\r\n                    )\r\n        }\r\n\r\n        \r\n\r\n        function InsertError() {\r\n\r\n            if (errorMessage === '') {\r\n                return null;\r\n            }\r\n\r\n            setTimeout(() => {\r\n                assertError('');\r\n            }, 1000);\r\n\r\n            return (<p>{errorMessage}</p>);\r\n\r\n        }\r\n    }\r\n\r\n    function LoginComponent() {\r\n\r\n        const [username, updateUsername] = useState('');\r\n        const [password, updatePassword] = useState('');\r\n        const [errorMessage, assertError] = useState('');\r\n\r\n        if (sessionStorage.getItem('loggedIn') === null) {\r\n\r\n\r\n\r\n            return (\r\n\r\n                <div id=\"login\">\r\n                    <span><p id=\"username\">Username:</p> </span> <span><p id=\"password\">Password:</p></span>\r\n                    <form>\r\n                        <label>\r\n                            <input type=\"text\" name=\"user\" onChange={evt => updateUsername(evt.target.value)} /> <span> <input type=\"password\" name=\"pass\" onChange={evt => updatePassword(evt.target.value)} /></span>\r\n                        </label>\r\n                        <button type=\"button\" id=\"loginButton\" onClick={loginButton}> Log In</button>\r\n                    </form>\r\n                    <InsertError />\r\n\r\n                    <br/>\r\n\r\n                    <div>\r\n                        <Link to=\"/create\"><p id='create'>Create User</p></Link>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                \r\n\r\n            );\r\n\r\n        } else {\r\n\r\n\r\n            return (\r\n\r\n\r\n                <div id=\"loggedIn\">\r\n\r\n                    <p>Logged in as: {sessionStorage.getItem('username')} &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span type=\"button\" id=\"logout\" onClick={logoutButton}>Logout</span></p>\r\n\r\n                </div>\r\n\r\n            )\r\n        }\r\n\r\n        function loginButton() {\r\n\r\n            let passObj = {\r\n\r\n                password: password\r\n\r\n            }\r\n\r\n            let loginSuccess = false;\r\n\r\n            if (username === '') {\r\n                assertError(\"Incorrect username or password.\");\r\n                return;\r\n            }\r\n\r\n            async function fetchData() {\r\n                await fetch(`http://99.109.3.109:3000/Users/${username}`, {\r\n                    method: \"POST\",\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify(passObj)\r\n\r\n                })\r\n                    .then((res) => {\r\n\r\n                        if (res.status === 404) {\r\n                            console.log(404);\r\n                            return;\r\n                        }\r\n                        loginSuccess = true;\r\n                        return res.json()\r\n                    })\r\n                    .then(\r\n                        (result) => {\r\n\r\n                            if (!loginSuccess) {\r\n                                assertError(\"Incorrect username or password.\");\r\n\r\n                                return;\r\n                            }\r\n\r\n                            sessionStorage.setItem('username', username);\r\n                            sessionStorage.setItem('loggedIn', true);\r\n                            updateLogin(true);\r\n\r\n                            return;\r\n\r\n                        },\r\n\r\n\r\n                    )\r\n\r\n            }\r\n\r\n            fetchData();\r\n\r\n            return false;\r\n        }\r\n\r\n        function logoutButton() {\r\n\r\n\r\n            sessionStorage.removeItem('username');\r\n            sessionStorage.removeItem('loggedIn');\r\n            updateLogin('');\r\n\r\n            return;\r\n\r\n        }\r\n\r\n        function InsertError() {\r\n\r\n            if (errorMessage === '') {\r\n                return null;\r\n            }\r\n\r\n            setTimeout(() => {\r\n                assertError('');\r\n            }, 1000);\r\n\r\n            return (<p id=\"error\">{errorMessage}</p>);\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default Home;","import React, { useReducer } from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport { Bar, Line, defaults } from 'react-chartjs-2';\r\nimport Chart from 'chart.js';\r\n\r\n\r\n\r\n\r\n\r\nfunction Charts() {\r\n\r\n    const [stockInfo, updatestock] = useState([]);\r\n    const [dateInfo, updateDates] = useState([]);\r\n    const [returnObj, updateObj] = useState('null');\r\n    const [errorMessage, assertError] = useState('');\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Link to=\"/\"> Return to Home</Link>\r\n\r\n\r\n            <div>\r\n                <br />\r\n                <br />\r\n                <ChartSearch />\r\n            </div>\r\n            <ChartView />\r\n            <StockData />\r\n            <InsertError />\r\n           \r\n        </div>\r\n\r\n\r\n\r\n    )\r\n\r\n\r\n    function ChartSearch() {\r\n\r\n       \r\n\r\n        const [formStock, updateForm] = useState('');\r\n\r\n        return (\r\n            <div className=\"APISearch\">\r\n                <span> Search for ticker: </span><span><input className='formInput' onChange={evt => updateForm(evt.target.value)} type='text'></input></span> <button onClick={buttonClick} id=\"addButton\">Confirm</button>\r\n\r\n            </div>\r\n\r\n        )\r\n\r\n        async function buttonClick() {\r\n\r\n\r\n            let dateArr = [];\r\n\r\n            let priceArr = [];\r\n\r\n\r\n            await fetch(`https://apidojo-yahoo-finance-v1.p.rapidapi.com/stock/v2/get-chart?interval=1d&symbol=${formStock}&range=1mo&region=US`, {\r\n                \"method\": \"GET\",\r\n                \"headers\": {\r\n                    \"x-rapidapi-key\": \"c855900aafmshb5d7c3e12bbc769p180117jsn87216bd9ab88\",\r\n                    \"x-rapidapi-host\": \"apidojo-yahoo-finance-v1.p.rapidapi.com\"\r\n                }\r\n            })\r\n                .then((response) => {\r\n                    if (response.status === 400 || response.status === 404 || response.status === 500){\r\n                        console.log('err');\r\n                        assertError('Stock does not exist.');\r\n                        return;\r\n                    }\r\n                    return response.json();\r\n                }\r\n                ).then((result) => {\r\n\r\n                    if (result.chart.result === null){\r\n                        assertError('Stock does not exist.');\r\n                        return;\r\n                    }\r\n\r\n                    result.chart.result[0].indicators.quote[0].open.forEach(element => {\r\n                        priceArr.push(element);\r\n                    });\r\n\r\n                    console.log(result.chart.result[0].timestamp);\r\n                    result.chart.result[0].timestamp.forEach((element) => {\r\n\r\n                        let date = new Date(element * 1000);\r\n\r\n                        dateArr.push(`${date.getMonth() + 1}/${date.getDate()}`);\r\n\r\n                    })\r\n\r\n                    updatestock(priceArr);\r\n                    updateDates(dateArr);\r\n\r\n\r\n                    async function fetchData() {\r\n                        await fetch(`https://apidojo-yahoo-finance-v1.p.rapidapi.com/stock/v2/get-summary?symbol=${formStock}&region=US`, {\r\n                            \"method\": \"GET\",\r\n                            \"headers\": {\r\n                                \"x-rapidapi-key\": \"c855900aafmshb5d7c3e12bbc769p180117jsn87216bd9ab88\",\r\n                                \"x-rapidapi-host\": \"apidojo-yahoo-finance-v1.p.rapidapi.com\"\r\n                            }\r\n                        })\r\n                            .then((response) => {\r\n                                return response.json();\r\n                            }\r\n                            ).then((result) => {\r\n\r\n                                updateObj(result);\r\n\r\n                            })\r\n                            .catch(err => {\r\n                                console.error(err);\r\n                            });\r\n                    }\r\n\r\n                    fetchData();\r\n\r\n\r\n                    return;\r\n\r\n                })\r\n                .catch(err => {\r\n                    console.error(err);\r\n                });\r\n\r\n\r\n            let obj = {\r\n                name: formStock,\r\n                score: 5,\r\n                postive_score: 5,\r\n                negative_score: -2,\r\n                activity: 300,\r\n\r\n            }\r\n\r\n\r\n            return;\r\n        }\r\n\r\n\r\n    }\r\n\r\n    function ChartView() {\r\n\r\n        if (stockInfo.length === 0) {\r\n            return null;\r\n        }\r\n\r\n        console.log(stockInfo === []);\r\n\r\n        const state = {\r\n            labels: dateInfo,\r\n            datasets: [\r\n                {\r\n                    label: 'Stock Price',\r\n                    backgroundColor: 'rgba(53,122,14,1)',\r\n                    borderColor: 'rgba(0,0,0,1)',\r\n                    borderWidth: 2,\r\n                    data: stockInfo\r\n                }\r\n            ]\r\n        }\r\n\r\n        defaults.borderColor = 'green';\r\n        defaults.color = 'rgb(81, 243, 81)';\r\n        \r\n\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <Line\r\n                        data={state}\r\n                        options={{\r\n                            responsive: true,\r\n                            maintainAspectRatio: false,\r\n                            layout: {\r\n                                padding: {\r\n                                    top: 5,\r\n                                    left: 15,\r\n                                    right: 25,\r\n                                    bottom: 15\r\n                                }\r\n                            },\r\n                            title: {\r\n                                display: true,\r\n                                text: 'Average Rainfall per month',\r\n                                fontSize: 20\r\n                            },\r\n                            legend: {\r\n                                display: true,\r\n                                position: 'right'\r\n                            }\r\n                        }}\r\n                        width={10}\r\n                        height={300}\r\n\r\n                    />\r\n                </div>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n    function StockData() {\r\n\r\n\r\n\r\n        if (returnObj === 'null') {\r\n            return null;\r\n        }\r\n\r\n        let dividend;\r\n\r\n\r\n\r\n        try {\r\n            dividend = returnObj.summaryDetail.dividendRate.raw;\r\n            if (dividend === undefined) {\r\n                return (\r\n                    <div className='SotD'>\r\n                        <table className=\"chartTable\">\r\n                            <tbody>\r\n\r\n                                <tr>\r\n                                    <th><p>Company Name:</p></th>\r\n                                    <td><p>{returnObj.quoteType.shortName}</p></td>\r\n\r\n                                    <th><p>52 Week Movement:</p></th>\r\n                                    <td><p>{returnObj.defaultKeyStatistics[\"52WeekChange\"].fmt}</p></td>\r\n                                    <th><p>3 Month Average Volume:</p></th>\r\n                                    <td><p>{returnObj.price.averageDailyVolume3Month.fmt}</p></td>\r\n\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <th><p>Recent Open:</p></th>\r\n                                    <td><p>${Math.round(100 * returnObj.price.regularMarketOpen.raw)/100}</p></td>\r\n                                    <th><p>Quarterly Growth:</p></th>\r\n                                    <td><p>{returnObj.defaultKeyStatistics.earningsQuarterlyGrowth.fmt}</p></td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <th><p>Dividend Rate:</p></th>\r\n                                    <td><p>None</p></td>\r\n                                    <th><p>Forward PE:</p></th>\r\n                                    <td><p>{Math.round(100*returnObj.defaultKeyStatistics.forwardPE.raw)/100}x</p></td>\r\n\r\n\r\n                                </tr>\r\n\r\n                            </tbody>\r\n\r\n                        </table>\r\n                    </div>\r\n                )\r\n            }\r\n            return (\r\n\r\n                <div className='SotD'>\r\n                    <table className = \"chartTable\">\r\n                        <tbody>\r\n\r\n                            <tr>\r\n                                <th><p>Company Name:</p></th>\r\n                                <td><p>{returnObj.quoteType.shortName}</p></td>\r\n\r\n                                <th><p>52 Week Movement:</p></th>\r\n                                <td><p>{returnObj.defaultKeyStatistics[\"52WeekChange\"].fmt}</p></td>\r\n                                <th><p>3 Month Average Volume:</p></th>\r\n                                <td><p>{returnObj.price.averageDailyVolume3Month.fmt}</p></td>\r\n\r\n                            </tr>\r\n\r\n                            <tr>\r\n                                <th><p>Recent Open:</p></th>\r\n                                <td><p>${Math.round(100 * returnObj.price.regularMarketOpen.raw)/100}</p></td>\r\n                                <th><p>Quarterly Growth:</p></th>\r\n                                <td><p>{returnObj.defaultKeyStatistics.earningsQuarterlyGrowth.fmt}</p></td>\r\n                            </tr>\r\n\r\n                            <tr>\r\n                                <th><p>Dividend Rate:</p></th>\r\n                                <td><p>{dividend}c</p></td>\r\n                                <th><p>Forward PE:</p></th>\r\n                                <td><p>{Math.round(100*returnObj.defaultKeyStatistics.forwardPE.raw)/100}x</p></td>\r\n\r\n\r\n                            </tr>\r\n\r\n                        </tbody>\r\n\r\n                    </table>\r\n                </div>\r\n            )\r\n\r\n        } catch {\r\n            console.log('no Dividend')\r\n        }\r\n\r\n        return;\r\n\r\n    }\r\n\r\n    function InsertError() {\r\n\r\n        if (errorMessage === '') {\r\n            return null;\r\n        }\r\n\r\n        setTimeout(() => {\r\n            assertError('');\r\n        }, 1000);\r\n\r\n        return (<p id=\"errorChart\">{errorMessage}</p>);\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Charts\r\n","import { useEffect, useState } from 'react';\r\nimport React, { useReducer } from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n} from \"react-router-dom\";\r\n\r\nfunction CreateUser(){\r\n    const [username, updateUsername] = useState('');\r\n    const [password, updatePassword] = useState('');\r\n    const [errorMessage, assertError] = useState('');\r\n    const [successMessage, assertSuccess] = useState('');\r\n\r\n    return(\r\n        <div>\r\n            <Link to=\"/\"> Return to Home</Link> \r\n            <br/>\r\n            <h1>Create User:</h1>\r\n            <form>\r\n                    <label>\r\n                        <input type=\"text\" name=\"user\" onChange={evt => updateUsername(evt.target.value)} /> <span> <input type=\"password\" name=\"pass\" onChange={evt => updatePassword(evt.target.value)} /></span>\r\n                    </label>\r\n                    <button type=\"button\" id=\"loginButton\" onClick={createButton}> Create </button>\r\n            </form>\r\n            <InsertError />\r\n            <InsertSuccess />\r\n        </div>\r\n\r\n    )\r\n\r\n    function createButton() {\r\n\r\n        let obj = {\r\n\r\n            username: username,\r\n            password: password\r\n\r\n        }\r\n\r\n        let createSuccess = false;\r\n\r\n        if (username === '') {\r\n            assertError(\"Incorrect username or password.\");\r\n            return;\r\n        }\r\n\r\n        async function fetchData() {\r\n            await fetch('http://99.109.3.109:3000/Users', {\r\n                method: \"POST\",\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(obj)\r\n\r\n            })\r\n                .then((res) => {\r\n\r\n                    if (res.status === 404 || res.status === 500) {\r\n                        assertError(\"Username already exists.\");\r\n                        return;\r\n                    }\r\n                    createSuccess = true;\r\n                    return res.json()\r\n                })\r\n                .then(\r\n                    (result) => {\r\n\r\n                        if (!createSuccess) {\r\n                \r\n\r\n                            return;\r\n                        } \r\n\r\n                        console.log('success');\r\n\r\n                        assertSuccess('Success!');\r\n\r\n                        return;\r\n\r\n                    },\r\n\r\n\r\n                ).catch(err => console.log(err))\r\n\r\n        }\r\n\r\n        fetchData();\r\n\r\n        return false;\r\n    }\r\n\r\n    function InsertError() {\r\n\r\n        if (errorMessage === '') {\r\n            return null;\r\n        }\r\n\r\n        setTimeout(() => {\r\n            assertError('');\r\n        }, 1000);\r\n\r\n        return (<p  className=\"createError\">{errorMessage}</p>);\r\n\r\n    }\r\n    function InsertSuccess() {\r\n\r\n        if (successMessage === '') {\r\n            return null;\r\n        }\r\n\r\n        setTimeout(() => {\r\n            assertSuccess('');\r\n        }, 1000);\r\n\r\n        return (<p className=\"createError\">{successMessage}</p>);\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default CreateUser","import Startup from './Startup';\r\nimport stonkPic from './stonk.jpg';\r\nimport calcPic from './calculator.jpg';\r\nimport sentimentPic from './SENTIMENT.jpg';\r\nimport React, { useReducer } from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport MyComponent from './Startup';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n} from \"react-router-dom\";\r\n\r\n\r\nfunction Calculator() {\r\n\r\n    const [shares, updateShares] = useState(0);\r\n    const [price, updatePrice] = useState(0);\r\n    const [div, updateDiv] = useState(0);\r\n    const [options, updateOptions] = useState(0);\r\n    const [newPrice, updateNewPrice] = useState(0);\r\n    const [newCost, updateNewCost] = useState(0);\r\n    const [returns, updateReturn] = useState(0);\r\n\r\n    let shareInt = parseInt(shares);\r\n  \r\n    let priceFloat = parseFloat(price);\r\n    \r\n    let divFloat = parseFloat(div);\r\n    \r\n    let optionsFloat = parseFloat(options);\r\n\r\n    let newPriceFloat = parseFloat(newPrice);\r\n\r\n    let newCostBasis = Math.round(100 *((shareInt*priceFloat) - ((divFloat*shareInt) + ((optionsFloat*12) * shareInt)))/shareInt)/100;\r\n\r\n    let annualReturn = Math.round( 100*(((shareInt*priceFloat) + (shareInt*optionsFloat*12) + (shareInt*divFloat) + (shareInt * (newPriceFloat - priceFloat)))/(shareInt*priceFloat) - 1)*100)/100;\r\n    if(isNaN(newCostBasis)){\r\n        newCostBasis = 'Waiting...';\r\n    } else {\r\n        newCostBasis = '$' + newCostBasis\r\n    }\r\n\r\n    if(isNaN(annualReturn)){\r\n        annualReturn = 'Waiting...';\r\n    } else {\r\n        annualReturn = annualReturn + '%'\r\n    }\r\n   \r\n    return (\r\n        <div>\r\n            <Link to=\"/\"> Return to Home </Link>\r\n\r\n            <table id='calculatorTable'>\r\n                <tbody>\r\n                    <tr>\r\n                        <th className='calc'>\r\n                            <p className='calc'>Shares</p>\r\n                        </th>\r\n                        <th className='calc'>\r\n                            <p className='calc'>Avg cost</p>\r\n                        </th>\r\n                        <th className='calc'>\r\n                            <p className='calc'>Annual Dividend(cents/share)</p>\r\n                        </th>\r\n                        <th className='calc'>\r\n                            <p className='calc'>Monthly Option Premium(cents/share)</p>\r\n                        </th>\r\n                        <th className='calc'>\r\n                            <p className='calc'>New share price</p>\r\n                        </th>\r\n                    </tr>\r\n                    <tr>\r\n                        <td className = 'calc'>\r\n                            <input className='calcInput' value={shares} onChange={(e) => {\r\n                                const re = /\\d+((\\.|,)\\d+)?/;\r\n\r\n                                // if value is not blank, then test the regex\r\n\r\n                                if (e.target.value === '' || re.test(e.target.value)) {\r\n                                    updateShares(e.target.value);\r\n                                }\r\n                            }}></input>\r\n                        </td>\r\n                        <td className = 'calc'>\r\n                            <input className='calcInput' value={price} onChange={(e) => {\r\n                                const re = /\\d+((\\.|,)\\d+)?/;\r\n\r\n                                // if value is not blank, then test the regex\r\n\r\n                                if (e.target.value === '' || re.test(e.target.value)) {\r\n                                    updatePrice(e.target.value);\r\n                                }\r\n                            }}></input>\r\n                        </td>\r\n                        <td className = 'calc'>\r\n                            <input className='calcInput' value={div} onChange={(e) => {\r\n                                const re = /\\d+((\\.|,)\\d+)?/;\r\n\r\n                                // if value is not blank, then test the regex\r\n\r\n                                if (e.target.value === '' || re.test(e.target.value)) {\r\n                                    updateDiv(e.target.value)\r\n                                }\r\n                            }}></input>\r\n                        </td>\r\n                        <td className = 'calc'>\r\n                            <input className='calcInput' value={options} onChange={(e) => {\r\n                                const re = /\\d+((\\.|,)\\d+)?/;\r\n\r\n                                // if value is not blank, then test the regex\r\n\r\n                                if (e.target.value === '' || re.test(e.target.value)) {\r\n                                    updateOptions(e.target.value)\r\n                                }\r\n                            }}></input>\r\n                        </td>\r\n                        <td className = 'calc'>\r\n                            <input className='calcInput' value={newPrice} onChange={(e) => {\r\n                                const re = /\\d+((\\.|,)\\d+)?/;\r\n\r\n                                // if value is not blank, then test the regex\r\n\r\n                                if (e.target.value === '' || re.test(e.target.value)) {\r\n                                    updateNewPrice(e.target.value)\r\n                                }\r\n                            }}></input>\r\n                        </td>\r\n                    </tr>\r\n                    <tr></tr>\r\n                    <tr>\r\n\r\n                        <th className='calc'>\r\n                            <p className='calcF'>New Cost Basis:</p>\r\n                        </th>\r\n                        <th className='calc'>\r\n                            <p className='calcF'>{newCostBasis}</p>\r\n                        </th>\r\n                        \r\n                    </tr>\r\n                    <tr></tr>\r\n                    <tr>\r\n                    <th className='calc'>\r\n                            <p className='calcF'>Annualized Return:</p>\r\n                        </th>\r\n                        <th className='calc'>\r\n                            <p className='calcF'>{annualReturn}</p>\r\n                        </th >\r\n                    </tr>\r\n                </tbody>\r\n\r\n\r\n            </table>\r\n        </div>\r\n    )\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default Calculator","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n\nimport stonkPic from './stonk.jpg';\nimport calcPic from './calculator.jpg';\nimport sentimentPic from './SENTIMENT.jpg';\nimport 'react-bulma-components/dist/react-bulma-components.min.css';\nimport './App.css';\nimport { useEffect, useState } from 'react';\nimport Startup from './Startup';\nimport MyComponent from './Startup';\nimport Sentiment from './Sentiment';\nimport Home from './Home';\nimport Charts from './Charts'\nimport CreateUser from './CreateUser'\nimport Calculator from './Calculator'\n\n\n\n\nexport default function App() {\n\n  return (\n    <Router>\n      <div id = \"test\">\n       \n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n          <Route path=\"/sentiment\">\n            <Sentiment />\n          </Route>\n          <Route path=\"/calculator\">\n            <Calculator />\n          </Route>\n          <Route path=\"/create\">\n            <CreateUser />\n          </Route>\n          <Route path=\"/charts\">\n            <Charts />\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\n\n\nfunction About() {\n  return <h2>About</h2>;\n}\n\nfunction Users() {\n\n  return <div>\n\n  <Link to=\"/\">Main page</Link>\n  </div>;\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'react-bulma-components/dist/react-bulma-components.min.css';\nimport './App.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}