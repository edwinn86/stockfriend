{"version":3,"sources":["stonk.jpg","calculator.jpg","SENTIMENT.jpg","Startup.js","Sentiment.js","Home.js","App.js","reportWebVitals.js","index.js"],"names":["MyComponent","Sentiment","useState","stockInfo","updatestock","to","StockSearch","SentimentView","formStock","updateForm","className","onChange","evt","target","value","type","onClick","id","a","fetch","then","response","json","result","console","log","catch","err","error","name","score","postive_score","negative_score","activity","defaults","borderColor","data","labels","datasets","label","backgroundColor","borderWidth","options","responsive","maintainAspectRatio","layout","padding","top","left","right","bottom","title","display","text","fontSize","legend","position","width","height","Home","updateLogin","formUpdate","updatePage","useEffect","LoginComponent","src","stonkPic","alt","calcPic","sentimentPic","SotD","sessionStorage","getItem","GetStocks","InsertButton","setError","stocks","setItems","res","stockArr","fetchData","message","map","stock","ticker","shares","price","formShares","updateForm2","formPrice","updateForm3","updateForm4","errorMessage","assertError","isAStock","status","obj","username","method","headers","body","JSON","stringify","InsertError","setTimeout","updateUsername","password","updatePassword","passObj","loginSuccess","setItem","removeItem","App","path","Users","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.97c3c2ef.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/stonk.02491643.jpg\";","export default __webpack_public_path__ + \"static/media/calculator.ef83aa76.jpg\";","export default __webpack_public_path__ + \"static/media/SENTIMENT.f89e1909.jpg\";","import { useEffect, useState } from 'react';\r\n\r\n\r\nfunction MyComponent() {\r\n    const [error, setError] = useState(null);\r\n    const [forwardPE, setItems] = useState(0);\r\n\r\n    // Note: the empty deps array [] means\r\n    // this useEffect will run once\r\n    // similar to componentDidMount()\r\n    useEffect(() => {\r\n        fetch(\"https://yahoo-finance-low-latency.p.rapidapi.com/v11/finance/quoteSummary/UWMC?modules=defaultKeyStatistics%2CassetProfile\", {\r\n            \"method\": \"GET\",\r\n            \"headers\": {\r\n                \"x-rapidapi-key\": \"c855900aafmshb5d7c3e12bbc769p180117jsn87216bd9ab88\",\r\n                \"x-rapidapi-host\": \"yahoo-finance-low-latency.p.rapidapi.com\"\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n\r\n                    setItems(result.quoteSummary.result[0].defaultKeyStatistics.forwardPE.fmt);\r\n                    console.log(result);\r\n \r\n                },\r\n                // Note: it's important to handle errors here\r\n                // instead of a catch() block so that we don't swallow\r\n                // exceptions from actual bugs in components.\r\n                (error) => {\r\n                    setError(error);\r\n                }\r\n            )\r\n    }, [])\r\n\r\n    if (error) {\r\n        return <div>Error: {error.message}</div>;\r\n    } else {\r\n        return (\r\n            <div>\r\n                <p className=\"SotDEle\"> Ticker: UWMC </p>\r\n                <br></br>\r\n                <p className=\"SotDEle\"> Forward PE Ratio: {forwardPE}</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default MyComponent;\r\n\r\n","\r\nimport React, { useReducer } from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport { Bar, Line, defaults } from 'react-chartjs-2';\r\nimport Chart from 'chart.js';\r\n\r\n\r\n\r\n\r\n\r\nfunction Sentiment() {\r\n\r\n    const [stockInfo, updatestock] = useState([]);\r\n    const [dateInfo, updateDates] = useState([]);\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Link to=\"/\"> Return to Home</Link>\r\n\r\n\r\n            <div>\r\n                <br />\r\n                <br />\r\n                <StockSearch />\r\n            </div>\r\n            <SentimentView />\r\n            {/* <InsertError /> */}\r\n        </div>\r\n\r\n\r\n\r\n    )\r\n\r\n\r\n    function StockSearch() {\r\n        const [formStock, updateForm] = useState('');\r\n\r\n        return (\r\n            <div>\r\n                <span> Search for stock: </span><span><input className='formInput' onChange={evt => updateForm(evt.target.value)} type='text'></input></span> <button onClick={buttonClick} id=\"addButton\">Confirm</button>\r\n\r\n            </div>\r\n\r\n        )\r\n\r\n        async function buttonClick() {\r\n\r\n\r\n          await fetch(`https://socialsentiment-io.p.rapidapi.com/stocks/${formStock}/sentiment/daily/`, {\r\n                \"method\": \"GET\",\r\n                \"headers\": {\r\n                    \"x-rapidapi-key\": \"c855900aafmshb5d7c3e12bbc769p180117jsn87216bd9ab88\",\r\n                    \"x-rapidapi-host\": \"socialsentiment-io.p.rapidapi.com\"\r\n                }\r\n            })\r\n                .then((response) => { \r\n                    return response.json()}\r\n                ).then((result) => {\r\n    \r\n                    console.log(result);\r\n                    console.log(stockInfo);\r\n    \r\n                })\r\n                .catch(err => {\r\n                    console.error(err);\r\n                });\r\n           \r\n\r\n            let obj = {\r\n                name: formStock,\r\n                score: 5,\r\n                postive_score: 5,\r\n                negative_score: -2,\r\n                activity: 300,\r\n\r\n            }\r\n\r\n\r\n            updatestock(obj);\r\n            return;\r\n        }\r\n\r\n\r\n    }\r\n\r\n    function SentimentView() {\r\n\r\n        const state = {\r\n            labels: ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'],\r\n            datasets: [\r\n                {\r\n                    label: 'Rainfall',\r\n                    backgroundColor: 'rgba(53,122,14,1)',\r\n                    borderColor: 'rgba(0,0,0,1)',\r\n                    borderWidth: 2,\r\n                    data: [65, 59, 80, 81, 56]\r\n                }\r\n            ]\r\n        }\r\n\r\n        defaults.borderColor = 'white';\r\n\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <Bar\r\n                        data={state}\r\n                        options={{\r\n                            responsive: true,\r\n                            maintainAspectRatio: false,\r\n                            layout: {\r\n                                padding: {\r\n                                    top: 5,\r\n                                    left: 15,\r\n                                    right: 25,\r\n                                    bottom: 15\r\n                                }\r\n                            },\r\n                            title: {\r\n                                display: true,\r\n                                text: 'Average Rainfall per month',\r\n                                fontSize: 20\r\n                            },\r\n                            legend: {\r\n                                display: true,\r\n                                position: 'right'\r\n                            }\r\n                        }}\r\n                        width={10}\r\n                        height={300}\r\n\r\n                    />\r\n                </div>\r\n\r\n                <div>\r\n                    <p>Test</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Sentiment\r\n","import Startup from './Startup';\r\nimport stonkPic from './stonk.jpg';\r\nimport calcPic from './calculator.jpg';\r\nimport sentimentPic from './SENTIMENT.jpg';\r\nimport React, { useReducer } from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport MyComponent from './Startup';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n} from \"react-router-dom\";\r\n\r\n\r\nfunction Home() {\r\n\r\n    let stockString = \"\";\r\n\r\n    const [loggedIn, updateLogin] = useState(false);\r\n\r\n    const [formUpdate, updatePage] = useState('');\r\n\r\n    useEffect(() => {\r\n        updatePage();\r\n    }, [formUpdate])\r\n\r\n\r\n    return (<div className=\"App\">\r\n\r\n        <section className=\"hero\">\r\n            <div className=\"hero-body\">\r\n                <div className=\"container\">\r\n                    <h1 className=\"title textCenter pageHeader\">\r\n                        StockFriend\r\n                </h1>\r\n                    <h2 className=\"subtitle textCenter pageHeader\">\r\n                        Tools for the diligent investor\r\n                </h2>\r\n                </div>\r\n            </div>\r\n        </section>\r\n\r\n        <LoginComponent />\r\n\r\n        <section className=\"section\">\r\n            <div className=\"container\">\r\n\r\n                <div className=\"columns is-gapless\">\r\n\r\n                    <div className=\"column\">\r\n                        <img id=\"mainPic\" className=\"roundedCorners\" src={stonkPic} alt=\"stonkChart\" />\r\n                        <h1 className=\"imgHeader has-text-centered\"> <Link to=\"/\">Stock Charts</Link> </h1>\r\n                    </div>\r\n                    <div className=\"column\">\r\n                        <img src={calcPic} className=\"roundedCorners\" alt=\"calculator\" id=\"mainPic\" />\r\n                        <h1 className=\"imgHeader has-text-centered\"><Link to=\"/users\">Calculator tool</Link> </h1>\r\n                    </div>\r\n                    <div className=\"column\">\r\n                        <img src={sentimentPic} className=\"roundedCorners\" alt=\"Sentiment\" id=\"mainPic\" />\r\n                        <h1 className=\"imgHeader has-text-centered\"><Link to=\"/Sentiment\"> Stock Sentiment </Link> </h1>\r\n                    </div>\r\n\r\n\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </section>\r\n\r\n        <SotD />\r\n\r\n\r\n\r\n\r\n    </div>);\r\n\r\n\r\n    function SotD() {\r\n        if (sessionStorage.getItem('loggedIn') === 'true') {\r\n\r\n\r\n            return (<section className=\"section\">\r\n                <div className=\"container\">\r\n\r\n                    <div className=\"columns\">\r\n                        <div className=\"column\">\r\n                            <h1>My Stocks: </h1>\r\n                            <div id=\"SotD\">\r\n\r\n                                <GetStocks />\r\n\r\n                            </div>\r\n                            <InsertButton />\r\n                        </div>\r\n                        <div className=\"column\">\r\n                            <h1>Stock of the day: </h1>\r\n                            <div id=\"SotD\">\r\n\r\n                                { /* <Startup /> */}\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </section>);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function GetStocks() {\r\n\r\n        const [error, setError] = useState(null);\r\n        const [stocks, setItems] = useState([]);\r\n\r\n        // Note: the empty deps array [] means\r\n        // this useEffect will run once\r\n        // similar to componentDidMount()\r\n        useEffect(() => {\r\n\r\n            async function fetchData() {\r\n                await fetch(\"http://localhost:3000/Stocks/Winring86\", {\r\n                    \"method\": \"GET\",\r\n                })\r\n                    .then(res => res.json())\r\n                    .then(\r\n                        (result) => {\r\n\r\n\r\n                            if (result === null) {\r\n                                return;\r\n                            }\r\n\r\n                            console.log(result);\r\n                            setItems(result.stockArr)\r\n\r\n\r\n\r\n                        },\r\n                        // Note: it's important to handle errors here\r\n                        // instead of a catch() block so that we don't swallow\r\n                        // exceptions from actual bugs in components.\r\n                        (error) => {\r\n                            setError(error);\r\n                        }\r\n                    )\r\n            }\r\n\r\n            fetchData();\r\n\r\n        }, []);\r\n\r\n        if (error) {\r\n            return <div>Error: {error.message}</div>;\r\n        } else {\r\n            console.log(stocks)\r\n            return <div className=\"has-text-left SotDEle\">\r\n\r\n                <table>\r\n                    <tr>\r\n                        <th><p>Ticker</p></th>\r\n                        <th><p>Shares</p></th>\r\n                        <th><p>Average Price</p></th>\r\n                    </tr>\r\n\r\n                    {stocks.map(stock => (\r\n\r\n                        <tr>\r\n                            <td><p className='capitalized'>{stock.ticker}</p></td>\r\n                            <td><p>{stock.shares}</p></td>\r\n                            <td><p>${stock.price}</p></td>\r\n                        </tr>\r\n\r\n                    ))}\r\n\r\n                </table>\r\n            </div>\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    function InsertButton() {\r\n        const [formStock, updateForm] = useState('');\r\n        const [formShares, updateForm2] = useState('');\r\n        const [formPrice, updateForm3] = useState('');\r\n        const [removeStock, updateForm4] = useState('');\r\n        const [errorMessage, assertError] = useState('');\r\n\r\n        if (sessionStorage.getItem('loggedIn') === \"true\") {\r\n\r\n\r\n            return (\r\n                <div>\r\n                    <div>\r\n                        <span> Add Ticker: </span><span><input className='formInput' onChange={evt => updateForm(evt.target.value)} type='text'></input></span>\r\n                        <span> Shares: </span><span><input className='formInput' onChange={evt => updateForm2(evt.target.value)} type='text'></input></span>\r\n                        <span> Avg Price: </span><span><input className='formInput' onChange={evt => updateForm3(evt.target.value)} type='text'></input></span> <button onClick={buttonClick} id=\"addButton\">Confirm</button>\r\n                        <InsertError />\r\n                    </div>\r\n                    <br />\r\n                    <div id='removeStock'>\r\n                        <span> Remove Ticker: </span><span><input className='formInput' onChange={evt => updateForm4(evt.target.value)} type='text'></input></span>  <button onClick={removeClick} id=\"removeButton\">Confirm</button>\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else {\r\n            return null;\r\n        }\r\n        function buttonClick() {\r\n\r\n            let isAStock = true;\r\n\r\n\r\n\r\n            async function fetchData() {\r\n\r\n                await fetch(`https://yahoo-finance-low-latency.p.rapidapi.com/v11/finance/quoteSummary/${formStock}?modules=defaultKeyStatistics%2CassetProfile`, {\r\n                    \"method\": \"GET\",\r\n                    \"headers\": {\r\n                        \"x-rapidapi-key\": \"c855900aafmshb5d7c3e12bbc769p180117jsn87216bd9ab88\",\r\n                        \"x-rapidapi-host\": \"yahoo-finance-low-latency.p.rapidapi.com\"\r\n                    }\r\n                })\r\n                    .then(response => {\r\n                        if (response.status === 404) {\r\n                            isAStock = false;\r\n                            assertError('Stock does not exist.');\r\n                        }\r\n                    })\r\n                    .catch(err => {\r\n                        console.error(err);\r\n                    });\r\n\r\n\r\n\r\n                if (!isAStock) {\r\n                    return;\r\n                }\r\n                console.log(sessionStorage.getItem('username'))\r\n                let obj = {\r\n                    username: sessionStorage.getItem('username'),\r\n                    ticker: formStock,\r\n                    shares: formShares,\r\n                    price: formPrice\r\n\r\n                }\r\n\r\n                await fetch(\"http://localhost:3000/Stocks\", {\r\n                    method: \"POST\",\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify(obj)\r\n\r\n                })\r\n                    .then(res => res.json())\r\n                    .then(\r\n                        (result) => {\r\n\r\n                            console.log(result);\r\n                            updatePage(result);\r\n\r\n\r\n                        },\r\n                        // Note: it's important to handle errors here\r\n                        // instead of a catch() block so that we don't swallow\r\n                        // exceptions from actual bugs in components.\r\n\r\n                    )\r\n            }\r\n\r\n            fetchData();\r\n\r\n            return;\r\n        }\r\n\r\n        function removeClick(){\r\n\r\n        }\r\n\r\n        function InsertError() {\r\n\r\n            if (errorMessage === '') {\r\n                return null;\r\n            }\r\n\r\n            setTimeout(() => {\r\n                assertError('');\r\n            }, 1000);\r\n\r\n            return (<p>{errorMessage}</p>);\r\n\r\n        }\r\n    }\r\n\r\n    function LoginComponent() {\r\n\r\n        const [username, updateUsername] = useState('');\r\n        const [password, updatePassword] = useState('');\r\n        const [errorMessage, assertError] = useState('');\r\n\r\n        if (sessionStorage.getItem('loggedIn') === null) {\r\n\r\n\r\n\r\n            return (\r\n\r\n                <div id=\"login\">\r\n                    <span><p id=\"username\">Username:</p> </span> <span><p id=\"password\">Password:</p></span>\r\n                    <form>\r\n                        <label>\r\n                            <input type=\"text\" name=\"user\" onChange={evt => updateUsername(evt.target.value)} /> <span> <input type=\"password\" name=\"pass\" onChange={evt => updatePassword(evt.target.value)} /></span>\r\n                        </label>\r\n                        <button type=\"button\" id=\"loginButton\" onClick={loginButton}> Log In</button>\r\n                    </form>\r\n                    <InsertError />\r\n                </div>\r\n\r\n            );\r\n\r\n        } else {\r\n\r\n\r\n            return (\r\n\r\n\r\n                <div id=\"loggedIn\">\r\n\r\n                    <p>Logged in as: {sessionStorage.getItem('username')} &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span type=\"button\" id=\"logout\" onClick={logoutButton}>Logout</span></p>\r\n\r\n                </div>\r\n\r\n            )\r\n        }\r\n\r\n        function loginButton() {\r\n\r\n            let passObj = {\r\n\r\n                password: password\r\n\r\n            }\r\n\r\n            let loginSuccess = false;\r\n\r\n            if (username === '') {\r\n                assertError(\"Incorrect username or password.\");\r\n                return;\r\n            }\r\n\r\n            async function fetchData() {\r\n                await fetch(`http://99.109.3.109:3000/Users/${username}`, {\r\n                    method: \"POST\",\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify(passObj)\r\n\r\n                })\r\n                    .then((res) => {\r\n\r\n                        if (res.status === 404) {\r\n                            console.log(404);\r\n                            return;\r\n                        }\r\n                        loginSuccess = true;\r\n                        return res.json()\r\n                    })\r\n                    .then(\r\n                        (result) => {\r\n\r\n                            if (!loginSuccess) {\r\n                                assertError(\"Incorrect username or password.\");\r\n\r\n                                return;\r\n                            }\r\n\r\n                            sessionStorage.setItem('username', username);\r\n                            sessionStorage.setItem('loggedIn', true);\r\n                            updateLogin(true);\r\n\r\n                            return;\r\n\r\n                        },\r\n\r\n\r\n                    )\r\n\r\n            }\r\n\r\n            fetchData();\r\n\r\n            return false;\r\n        }\r\n\r\n        function logoutButton() {\r\n\r\n\r\n            sessionStorage.removeItem('username');\r\n            sessionStorage.removeItem('loggedIn');\r\n            updateLogin('');\r\n\r\n            return;\r\n\r\n        }\r\n\r\n        function InsertError() {\r\n\r\n            if (errorMessage === '') {\r\n                return null;\r\n            }\r\n\r\n            setTimeout(() => {\r\n                assertError('');\r\n            }, 1000);\r\n\r\n            return (<p id=\"error\">{errorMessage}</p>);\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default Home;","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n\nimport stonkPic from './stonk.jpg';\nimport calcPic from './calculator.jpg';\nimport sentimentPic from './SENTIMENT.jpg';\nimport 'react-bulma-components/dist/react-bulma-components.min.css';\nimport './App.css';\nimport { useEffect, useState } from 'react';\nimport Startup from './Startup';\nimport MyComponent from './Startup';\nimport Sentiment from './Sentiment';\nimport Home from './Home';\n\n\n\n\nexport default function App() {\n\n  return (\n    <Router>\n      <div id = \"test\">\n       \n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n          <Route path=\"/sentiment\">\n            <Sentiment />\n          </Route>\n          <Route path=\"/users\">\n            <Users />\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\n\n\nfunction About() {\n  return <h2>About</h2>;\n}\n\nfunction Users() {\n\n  return <div>\n\n  <Link to=\"/\">Main page</Link>\n  </div>;\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'react-bulma-components/dist/react-bulma-components.min.css';\nimport './App.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}